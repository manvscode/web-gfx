{"version":3,"sources":["src/lib/gfx.js"],"names":[],"mappings":"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","file":"js/lib/gfx.js","sourcesContent":["\nexport var Lib3dMath = {\n\t\tCore:        lib3dmath,\n\t\tTransforms:  lib3dmath.transforms,\n\t\tProjections: lib3dmath.transforms.projections,\n\t\tVector2:     lib3dmath.Vec2,\n\t\tVector3:     lib3dmath.Vec3,\n\t\tVector4:     lib3dmath.Vec4,\n\t\tMatrix2:     lib3dmath.Mat2,\n\t\tMatrix3:     lib3dmath.Mat3,\n\t\tMatrix4:     lib3dmath.Mat4,\n\t\tQuaternion:  lib3dmath.Quat,\n};\n\nexport class Color {\n\tconstructor(r, g, b, a) {\n\t\tthis.r = r || 0;\n\t\tthis.g = g || 0;\n\t\tthis.b = b || 0;\n\t\tthis.a = a || 0;\n\t}\n\n\tstatic red() {\n\t\treturn new Color( 1, 0, 0, 1 );\n\t}\n\n\tstatic green() {\n\t\treturn new Color( 0, 1, 0, 1 );\n\t}\n\n\tstatic blue() {\n\t\treturn new Color( 0, 0, 1, 1 );\n\t}\n\n\tstatic white() {\n\t\treturn new Color( 1, 1, 1, 1 );\n\t}\n\n\tstatic black() {\n\t\treturn new Color( 0, 0, 0, 1 );\n\t}\n}\n\nexport const Attribute = {\n\tvertex: \"vertex\",\n\tnormal: \"normal\",\n\ttextureCoord: \"textureCoord\",\n\tcolor: \"color\"\n};\n\nexport const Uniform = {\n\tprojectionMatrix: \"projectionMatrix\",\n\tmodelView: \"modelView\",\n\tnormalMatrix: \"normalMatrix\",\n\tcolor: \"color\",\n\tmaterialDiffuse: \"materialDiffuse\",\n\tmaterialSpecular: \"materialSpecular\",\n\ttexture0: \"texture0\",\n\ttexture1: \"texture1\",\n\ttexture2: \"texture2\",\n\ttexture3: \"texture3\",\n\ttexture4: \"texture4\",\n\ttexture5: \"texture5\"\n};\n\nexport class Shader {\n\tconstructor(gfx, program, attributes, uniforms ) {\n\t\tthis.gfx = gfx;\n\t\tthis.program = program;\n\t\tthis.attributes = {};\n\t\tthis.uniforms = {};\n\n\t\tfor( let key in attributes ) {\n\t\t\tlet attributeDesc = attributes[ key ];\n\t\t\tthis.attributes[ attributeDesc.name ] = gfx.glslBindAttribute( program, attributeDesc.variable );\n\t\t\tconsole.log( \"[GFX] Binded attribue \" + attributeDesc.name + \" (variable '\" + attributeDesc.variable + \"') with location \" + this.attributes[ attributeDesc.name ] );\n\t\t}\n\n\t\tfor( let key in uniforms ) {\n\t\t\tlet uniformDesc = uniforms[ key ];\n\t\t\tthis.uniforms[ uniformDesc.name ] = gfx.glslBindUniform( program, uniformDesc.variable );\n\t\t\tconsole.log( \"[GFX] Binded uniform \" + uniformDesc.name + \" (variable '\" + uniformDesc.variable + \"')\" );\n\t\t\t//console.log( \"[GFX] Binded uniform \" + uniformDesc.name + \" (variable '\" + uniformDesc.variable + \"') with location \" + this.uniforms[ uniformDesc.name ] );\n\t\t}\n\t}\n\n\tuse() {\n\t\tlet gl = this.gfx.getContext();\n\t\tgl.useProgram( this.program );\n\t}\n\n\tattributes() {\n\t\treturn this.attributes;\n\t}\n\n\tuniforms() {\n\t\treturn this.uniforms;\n\t}\n\n\t/*\n\t\tprepare( [\n\t\t\t{ name: Uniform.texture, value: 0 },\n\t\t\t{ name: Uniform.projectionMatrix, transpose: false, value: perspectiveMatrix },\n\t\t\t{ name: Uniform.normalMatrix, transpose: false, value: perspectiveMatrix },\n\t\t]);\n\t */\n\tprepare( uniformValues = [], debug = false ) {\n\t\tlet gl = this.gfx.getContext();\n\n\t\tfor( let key in this.attributes ) {\n\t\t\tgl.enableVertexAttribArray( this.attributes[ key ] );\n\t\t\tthis.gfx.assertNoError();\n\t\t}\n\n\t\tfor( let key in uniformValues ) {\n\t\t\tlet uniformValueDesc = uniformValues[ key ];\n\t\t\tlet name = uniformValueDesc.name;\n\t\t\tlet val  = uniformValueDesc.value;\n\t\t\tlet uniformLoc = this.uniforms[ name ];\n\n\t\t\tif( !uniformLoc ) {\n\t\t\t\tthrow \"[GFX] Bad uniform location!\";\n\t\t\t}\n\n\t\t\tif( typeof(val) == \"number\" ) {\n                if( Number.isInteger(val) ) {\n\t\t\t\t    if( debug ) console.log( \"[GFX] Setting integer uniform \" + name + \" with value: \" + val );\n\t\t\t\t    gl.uniform1i( uniformLoc, val );\n                }\n                else {\n\t\t\t\t    if( debug ) console.log( \"[GFX] Setting float uniform \" + name + \" with value: \" + val );\n\t\t\t\t    gl.uniform1f( uniformLoc, val );\n                }\n\t\t\t\tthis.gfx.assertNoError();\n\t\t\t}\n\t\t\telse if( val instanceof Lib3dMath.Vector3 ) {\n\t\t\t\tif( debug ) console.log( \"[GFX] Setting vector3 uniform \" + name + \" with value: \" + val );\n\t\t\t\tgl.uniform3fv( uniformLoc, new Float32Array([val.x, val.y, val.z]) );\n\t\t\t\tthis.gfx.assertNoError();\n\t\t\t}\n\t\t\telse if( val instanceof Lib3dMath.Vector4 ) {\n\t\t\t\tif( debug ) console.log( \"[GFX] Setting vector4 uniform \" + name + \" with value: \" + val );\n\t\t\t\tgl.uniform4fv( uniformLoc, new Float32Array([val.x, val.y, val.z, val.w]) );\n\t\t\t\tthis.gfx.assertNoError();\n\t\t\t}\n\t\t\telse if( val instanceof Lib3dMath.Matrix3 ) {\n\t\t\t\tlet tr = uniformValueDesc.transpose;\n\t\t\t\tif( tr ) {\n\t\t\t\t\tval.transpose();\n\t\t\t\t}\n\t\t\t\tif( debug ) console.log( \"[GFX] Setting matrix3 uniform \" + name + \" with\" + (tr ? \" transposed\" : \"\") + \" value:\\n\" + val );\n\t\t\t\tgl.uniformMatrix3fv( uniformLoc, false, new Float32Array(val.m) );\n\t\t\t\tthis.gfx.assertNoError();\n\t\t\t}\n\t\t\telse if( val instanceof Lib3dMath.Matrix4 ) {\n\t\t\t\tlet tr = uniformValueDesc.transpose;\n\t\t\t\tif( tr ) {\n\t\t\t\t\tval.transpose();\n\t\t\t\t}\n\t\t\t\tif( debug ) console.log( \"[GFX] Setting matrix4 uniform \" + name + \" with\" + (tr ? \" transposed\" : \"\") + \" value:\\n\" + val );\n\t\t\t\tgl.uniformMatrix4fv( uniformLoc, false, new Float32Array(val.m) );\n\t\t\t\tthis.gfx.assertNoError();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow \"[GFX] Bad uniform value!\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class GFX {\n\tconstructor(canvas, attributes) {\n\t\tif( !attributes ) {\n\t\t\t// load defaults\n\t\t\tattributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth: true,\n\t\t\t\tstencil: true,\n\t\t\t\tantialias: false,\n\t\t\t\tpremultipliedAlpha: false,\n\t\t\t\tpreserveDrawingBuffer: false,\n\t\t\t};\n\t\t}\n\n\t\tlet timer = () => {\n\t\t\tlet t = null;\n\t\t\tif (window.performance.now) {\n\t\t\t\tt = function() { return window.performance.now(); };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (window.performance.webkitNow) {\n\t\t\t\t\tt = function() { return window.performance.webkitNow(); };\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tt = function() { return new Date().getTime(); };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\n\t\t};\n\n\t\tthis.gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n\t\tif( !this.gl ) {\n\t\t\tthrow \"Bad WebGL context.\";\n\t\t}\n\t\tthis.now = timer();\n\n\t\tthis.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n\t}\n\n\tstatic isSupported() {\n\t\tlet canvas = document.createElement('canvas');\n\t\ttry {\n\t\t\tlet gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\trequestAnimationFrame( func ) {\n\t\twindow.requestAnimationFrame( func );\n\t}\n\n    initialize( setup_func ) {\n        let gfx_instance = this;\n        this.gl.canvas.addEventListener( \"webglcontextlost\", (event) => {\n            console.log( \"[GFX] Context lost.\" );\n            event.preventDefault();\n        }, false);\n        this.gl.canvas.addEventListener( \"webglcontextrestored\", (event) => {\n            console.log( \"[GFX] Context restored.\" );\n            setup_func(gfx_instance);\n        }, false);\n\n        setup_func(this);\n    }\n\n\trender( render_func ) {\n\t\trender_func(this);\n\t\twindow.requestAnimationFrame( this.render.bind(this, render_func) );\n\t}\n\n    run( initialization, render ) {\n        this.initialize( initialization );\n        this.render( render );\n    }\n\n\tassertNoError() {\n\t\tlet err = this.gl.getError();\n\t\tlet errorStrings = {};\n\n\t\terrorStrings[ this.gl.NO_ERROR ]                      = \"No error\";\n\t\terrorStrings[ this.gl.OUT_OF_MEMORY ]                 = \"Out of memory\";\n\t\terrorStrings[ this.gl.INVALID_ENUM ]                  = \"Invalid enum\";\n\t\terrorStrings[ this.gl.INVALID_OPERATION ]             = \"Invalid operation\";\n\t\terrorStrings[ this.gl.INVALID_FRAMEBUFFER_OPERATION ] = \"Invalid framebuffer operation\";\n\t\terrorStrings[ this.gl.INVALID_VALUE ]                 = \"Invalid value\";\n\t\terrorStrings[ this.gl.CONTEXT_LOST_WEBGL ]            = \"Context lost WebGL\";\n\n\t\tif( err != this.gl.NO_ERROR ) {\n\t\t    if( err != this.gl.CONTEXT_LOST_WEBGL || !this.initialization_fxn ) {\n\t\t\t    throw \"[GFX] Error (\" + errorStrings[err] + \")\";\n            }\n\t\t}\n\t}\n\n\tstatic validateArgs(functionName, args) {\n\t\tfor (var ii = 0; ii < args.length; ++ii) {\n\t\t\tif (args[ii] === undefined) {\n\t\t\t\tconsole.error(\"[GFX] Argument is undefined in \" + functionName + \".\");\n\t\t\t}\n\t\t}\n\t}\n\n\tgetContext() {\n\t\treturn this.gl;\n\t}\n\n\tgetCanvas() {\n\t\treturn this.gl.canvas;\n\t}\n\n\tgetWidth() {\n\t\treturn this.gl.canvas.offsetWidth;\n\t}\n\n\tgetHeight() {\n\t\treturn this.gl.canvas.offsetHeight;\n\t}\n\n\tgetAspectRatio() {\n\t\treturn this.getWidth() / this.getHeight();\n\t}\n\n\tgetVendor() {\n\t\tlet vendor = this.gl.getParameter( this.gl.VENDOR );\n\t\treturn vendor ? vendor : \"unknown\";\n\t}\n\n\tgetRenderer() {\n\t\tlet renderer = this.gl.getParameter( this.gl.RENDERER );\n\t\treturn renderer ? renderer : \"unknown\";\n\t}\n\n\tgetVersion() {\n\t\tlet version = this.gl.getParameter( this.gl.VERSION );\n\t\treturn version ? version : \"unknown\";\n\t}\n\n\tgetShaderVersion( gl ) {\n\t\tlet glslVersion = this.gl.getParameter( this.gl.SHADING_LANGUAGE_VERSION );\n\t\treturn glslVersion ? glslVersion : \"unknown\";\n\t}\n\n\tprintInfo() {\n\t\tconsole.log( \"[GFX] Vendor: \" + this.getVendor() );\n\t\tconsole.log( \"[GFX] Renderer: \" + this.getRenderer() );\n\t\tconsole.log( \"[GFX] Version: \" + this.getVersion() );\n\t\tconsole.log( \"[GFX] Shading Language: \" + this.getShaderVersion() );\n\t}\n\n\tframeDelta( now /* milliseconds */ ) {\n\t\tif( typeof this.frameDelta.last_render == 'undefined' ) {\n\t\t\tthis.frameDelta.last_render = 0;\n\t\t}\n\t\tlet delta = now - this.frameDelta.last_render;\n\t\tthis.frameDelta.last_render = now;\n\t\treturn delta;\n\t}\n\n\tframeRate( delta /*milliseconds*/ ) {\n\t\tif( typeof this.frameRate.last_time1 == 'undefined' ) {\n\t\t\tthis.frameRate.last_time1 = 0;\n\t\t}\n\t\tif( typeof this.frameRate.last_time2 == 'undefined' ) {\n\t\t\tthis.frameRate.last_time2 = 0;\n\t\t}\n\n\t\tdelta = (0.6 * delta + 0.3 * this.frameRate.last_time1 + 0.1 * this.frameRate.last_time2);\n\n\t\tthis.frameRate.last_time2 = this.frameRate.last_time1;\n\t\tthis.frameRate.last_time1 = delta;\n\n\t\treturn 1000.0 / delta;\n\t}\n\n\tprintFrameRate( delta /*milliseconds*/ ) {\n\t\tif( typeof this.printFrameRate.frame_rate_call_count == 'undefined' ) {\n\t\t\tthis.printFrameRate.frame_rate_call_count = 0;\n\t\t}\n\t\tif( this.printFrameRate.frame_rate_call_count > 60 ) {\n\t\t\tthis.printFrameRate.frame_rate_call_count = 0;\n\t\t\tconsole.log( \"[GFX] fps: \" + this.frameRate( delta ).toFixed(1) );\n\t\t}\n\t\tthis.printFrameRate.frame_rate_call_count += 1;\n\t}\n\n\tbufferCreate( buffer, target, usage ) {\n\t\tGFX.validateArgs( this.bufferCreate.name, arguments );\n\t\tlet bufferObject = this.gl.createBuffer();\n\t\tif( bufferObject ) {\n\t\t\tthis.gl.bindBuffer( target, bufferObject );\n\t\t\tthis.gl.bufferData( target, buffer, usage );\n\t\t\tthis.assertNoError()\n\t\t}\n\t\telse {\n\t\t\tconsole.error( \"[GFX] Unable to create buffer.\" );\n\t\t\tthrow \"Unable to create buffer.\"\n\t\t}\n\t\treturn bufferObject;\n\t}\n\n\tbufferDestroy( bufferObject ) {\n\t\tGFX.validateArgs( this.bufferDestroy.name, arguments );\n\t\tif( this.gl.isBuffer( bufferObject ) ) {\n\t\t\tthis.gl.deleteBuffer( bufferObject );\n\t\t\tthis.assertNoError()\n\t\t}\n\t}\n\n\tfloatBufferCreate( buffer, size, count, usage ) {\n\t\tlet result = this.bufferCreate( new Float32Array(buffer), this.gl.ARRAY_BUFFER, usage );\n\t\tresult.size = size;\n\t\tresult.count = count;\n\t\treturn result;\n\t}\n\n\tindexBufferCreate(buffer, count, usage ) {\n\t\tlet result = this.bufferCreate( new Uint16Array(buffer), this.gl.ELEMENT_ARRAY_BUFFER, usage );\n\t\tresult.count = count;\n\t\treturn result;\n\t}\n\n\tglslCompileShader( type, source ) {\n\t\tGFX.validateArgs( this.glslCompileShader.name, arguments );\n\t\tlet shader = this.gl.createShader( type );\n\t\tif( !shader ) {\n\t\t\tconsole.error( \"[GFX] Unable to create GLSL shader.\" );\n\t\t\tthrow \"Unable to create GLSL shader.\";\n\t\t}\n\n\t\tthis.gl.shaderSource( shader, source );\n\t\tthis.gl.compileShader( shader );\n\n\t\tlet compileStatus = this.gl.getShaderParameter( shader, this.gl.COMPILE_STATUS );\n\n\t\tif( !compileStatus ) {\n\t\t\tlet log = this.gl.getShaderInfoLog( shader );\n\t\t\tif( log ) {\n\t\t\t\tconsole.log( \"[GFX] \" + log );\n\t\t\t}\n\t\t\tthis.gl.deleteShader( shader );\n\t\t\tthrow \"GLSL Compilation Error\";\n\t\t}\n\n\t\treturn shader;\n\t}\n\n\tglslBindAttribute( program, name ) {\n\t\tGFX.validateArgs( this.glslBindAttribute.name, arguments );\n\t\tlet loc = this.gl.getAttribLocation( program, name );\n\n\t\tif( loc < 0 || loc == null || loc == undefined) {\n\t\t\tconsole.error( \"[GLSL] Unable to bind to attribute \" + name + \"'\" );\n\t\t\tthrow \"Unable to bind to attribute.\";\n\t\t}\n\n\t\treturn loc;\n\t}\n\n\tglslBindUniform( program, name ) {\n\t\tGFX.validateArgs( this.glslBindUniform.name, arguments );\n\t\tlet loc = this.gl.getUniformLocation( program, name );\n\n\t\tif( loc < 0 || loc == null || loc == undefined) {\n\t\t\tthrow \"[GFX] Unable to bind to uniform.\";\n\t\t}\n\n\t\treturn loc;\n\t}\n\n\t/*\n\t *  let shaders = [\n\t *     { type: gl.VERTEX_SHADER, url: \"assets/shaders/cube-100.v.glsl\" },\n\t *     { type: gl.FRAGMENT_SHADER, url: \"assets/shaders/cube-100.f.glsl\" },\n\t *  ];\n\t */\n\tglslProgramFromShaders( shaders, markForDeletion ) {\n\t\tGFX.validateArgs( this.glslProgramFromShaders.name, arguments );\n\t\tlet shaderObjects     = [];\n\t\tlet isCompilationGood = true;\n\n\t\t// compiled all of the shaders\n\t\tfor( let key in shaders ) {\n\t\t\tlet shaderInfo = shaders[ key ];\n\t\t\tlet source = this.loadStringFromUrl( shaderInfo.url );\n\n\t\t\ttry {\n\t\t\t\tlet shader = this.glslCompileShader( shaderInfo.type, source );\n\t\t\t\tshaderObjects.push( shader );\n\t\t\t}\n\t\t\tcatch( e ) {\n\t\t\t\tisCompilationGood = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconsole.log(\"[GFX] Shader compiled: \" + shaderInfo.url);\n\t\t}\n\n\t\tif( !isCompilationGood ) {\n\t\t\tfor( let key in shaderObjects ) {\n\t\t\t\tlet shader = shaderObjects[ key ];\n\t\t\t\tthis.gl.deleteShader( shader );\n\t\t\t}\n\t\t\tthrow \"[GFX] GLSL Compilation Error\";\n\t\t}\n\n\t\tlet program = this.gl.createProgram();\n\t\tif( !program ) {\n\t\t\tthrow \"[GFX] Unable to create GLSL program.\";\n\t\t}\n\n\t\tfor( let key in shaderObjects ) {\n\t\t\tlet shader = shaderObjects[ key ];\n\t\t\tthis.gl.attachShader( program, shader );\n\t\t}\n\n\t\tthis.gl.linkProgram( program );\n\t\tlet linkingStatus = this.gl.getProgramParameter( program, this.gl.LINK_STATUS );\n\n\t\tif( linkingStatus ) {\n\t\t\tconsole.log(\"[GFX] Shader linked.\");\n\t\t}\n\t\telse {\n\t\t\tlet log = this.gl.getProgramInfoLog( shader );\n\t\t\tif( log ) {\n\t\t\t\tconsole.log( \"[GFX] \" + log );\n\t\t\t}\n\t\t\tthis.gl.deleteProgram( program );\n\n\t\t\tthrow \"[GFX] GLSL Linking Error\";\n\t\t}\n\n\t\tif( markForDeletion ) {\n\t\t\tconsole.log(\"[GFX] Shaders will be destroyed automatically.\");\n\t\t\t// All attached shaders will be deleted when\n\t\t\t// deleteProgram() is called on the program\n\t\t\t// object.\n\t\t\tfor( let key in shaderObjects ) {\n\t\t\t\tlet shader = shaderObjects[ key ];\n\t\t\t\tthis.gl.deleteShader( shader );\n\t\t\t}\n\t\t}\n\n\t\treturn program;\n\t}\n\n\t/*\n\t * var attributes = [\n\t *    { name: \"vertex\", variable: \"a_vertex\" },\n\t *    { name: \"normal\", variable: \"a_normal\" },\n\t *    { name: \"textureCoord\", variable: \"a_tex_coord\" },\n\t * ];\n\t *\n\t * var uniforms = [\n\t *    { name: \"projectionMatrix\", variable: \"u_projection\" },\n\t *    { name: \"modelView\", variable: \"u_model_view\" },\n\t *    { name: \"normalMatrix\", variable: \"u_normal_matrix\" },\n\t *    { name: \"texture\", variable: \"u_texture\" },\n\t * ];\n\t */\n\tglslProgramObject( shaderAssets, attributes, uniforms ) {\n\t\tGFX.validateArgs( this.glslProgramObject.name, arguments );\n\t\tlet shaderProgram = this.glslProgramFromShaders( shaderAssets, false );\n\t\tvar gl = this.getContext();\n\t\treturn new Shader( this, shaderProgram, attributes, uniforms );\n\t}\n\n\tloadStringFromUrl(url, callback) {\n\t\tlet async = (callback != null && callback != undefined);\n\n\t\tlet xmlhttp = window.XMLHttpRequest ?\n\t\t\t\t\t  new XMLHttpRequest() : /* Modern browsers */\n\t\t\t\t\t  new ActiveXObject(\"Microsoft.XMLHTTP\");\n\n\n\t\tlet result = null;\n\t\txmlhttp.onreadystatechange = function() {\n\t\t\tif( xmlhttp.readyState == 4 && xmlhttp.status == 200 ) {\n\n\t\t\t\tif( async ) {\n\t\t\t\t\tresult = callback( xmlhttp.responseText );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = xmlhttp.responseText;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\txmlhttp.open( \"GET\", url, async );\n\t\txmlhttp.send( );\n\n\t\treturn result;\n\t}\n\n    loadTexture2D( url, min_filter = null, mag_filter = null, wrap_s = null, wrap_t = null ) {\n        let gl = this.getContext();\n        let generate_mipmaps = false;\n\n        if( !min_filter ) {\n            min_filter = gl.NEAREST;\n        }\n        if( !mag_filter ) {\n            mag_filter = gl.LINEAR;\n        }\n        if( !wrap_s ) {\n            wrap_s = gl.CLAMP_TO_EDGE;\n        }\n        if( !wrap_t ) {\n            wrap_t = gl.CLAMP_TO_EDGE;\n        }\n\n        switch( min_filter )\n        {\n            case gl.NEAREST_MIPMAP_LINEAR:\n            case gl.NEAREST_MIPMAP_NEAREST:\n            case gl.LINEAR_MIPMAP_LINEAR:\n            case gl.LINEAR_MIPMAP_NEAREST:\n                generate_mipmaps = true;\n                break;\n            default:\n                break;\n        }\n\n        /* Only GL_LINEAR and GL_NEAREST are valid magnification filters */\n        switch( mag_filter )\n        {\n            case gl.NEAREST_MIPMAP_LINEAR:\n            case gl.NEAREST_MIPMAP_NEAREST:\n                mag_filter = gl.NEAREST;\n                break;\n            case gl.LINEAR_MIPMAP_LINEAR:\n            case gl.LINEAR_MIPMAP_NEAREST:\n                mag_filter = gl.LINEAR;\n                break;\n            default:\n                break;\n        }\n\n        var texture = gl.createTexture();\n        var image = new Image();\n        image.src = url;\n        image.addEventListener('load', function() {\n            // Now that the image has loaded make copy it to the texture.\n            gl.bindTexture( gl.TEXTURE_2D, texture );\n            gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image );\n\n            gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min_filter );\n            gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mag_filter );\n            gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap_s );\n            gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap_t );\n\n            if( generate_mipmaps )\n            {\n                if (!GFX.isPowerOf2(image.width) || !GFX.isPowerOf2(image.height)) {\n                    throw \"[GFX] Texture does not have power of two dimensions.\";\n                }\n                else {\n                    console.log( \"[GFX] Generating mipmaps for texture: \" + url );\n                    gl.generateMipmap( gl.TEXTURE_2D );\n                }\n            }\n        });\n\n        return texture;\n    }\n\n\n\n\n    resize(setviewport = false) {\n\t\tvar gl = this.getContext();\n        var displayWidth  = gl.canvas.clientWidth;\n        var displayHeight = gl.canvas.clientHeight;\n        if( gl.canvas.width != displayWidth || gl.canvas.height != displayHeight ) {\n            gl.canvas.width  = displayWidth;\n            gl.canvas.height = displayHeight;\n        }\n\n        if( setviewport ) {\n            gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        }\n    }\n\n    static isPowerOf2( n ) {\n        return (n & (n - 1)) == 0;\n    }\n}\n"]}